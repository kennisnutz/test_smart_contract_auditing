{
  "contractName": "DividendPayingTokenInterface",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "DividendWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "DividendsDistributed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "dividendOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDividend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendsDistributed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"dividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDividend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Roger Wu (https://github.com/roger-wu)\",\"details\":\"An interface for a dividend-paying token contract.\",\"methods\":{\"dividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"withdrawDividend()\":{\"details\":\"SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0.\"}},\"title\":\"Dividend-Paying Token Interface\"},\"userdoc\":{\"methods\":{\"dividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawDividend()\":{\"notice\":\"Withdraws the ether distributed to the sender.\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/a/Desktop/projects/in-progress/babycake/contracts/DividendPayingTokenInterface.sol\":\"DividendPayingTokenInterface\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":160},\"remappings\":[]},\"sources\":{\"/C/Users/a/Desktop/projects/in-progress/babycake/contracts/DividendPayingTokenInterface.sol\":{\"keccak256\":\"0x09ed60efc79c1cd3cbf1b49291a9f83665f0eec31038747b808908371cba3e96\",\"urls\":[\"bzz-raw://d2d944a599910710bbdfa5b4252067fe12e735a97f0d1798a9bede87d20f83c7\",\"dweb:/ipfs/QmeQGk2fAr7MTBRh3NnVteCqYuz3GrnQ9PkLGMiWS4khd4\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\n/// @title Dividend-Paying Token Interface\r\n/// @author Roger Wu (https://github.com/roger-wu)\r\n/// @dev An interface for a dividend-paying token contract.\r\ninterface DividendPayingTokenInterface {\r\n    /// @notice View the amount of dividend in wei that an address can withdraw.\r\n    /// @param _owner The address of a token holder.\r\n    /// @return The amount of dividend in wei that `_owner` can withdraw.\r\n    function dividendOf(address _owner) external view returns (uint256);\r\n\r\n    /// @notice Withdraws the ether distributed to the sender.\r\n    /// @dev SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.\r\n    ///  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0.\r\n    function withdrawDividend() external;\r\n\r\n    /// @dev This event MUST emit when ether is distributed to token holders.\r\n    /// @param from The address which sends ether to this contract.\r\n    /// @param weiAmount The amount of distributed ether in wei.\r\n    event DividendsDistributed(address indexed from, uint256 weiAmount);\r\n\r\n    /// @dev This event MUST emit when an address withdraws their dividend.\r\n    /// @param to The address which withdraws ether from this contract.\r\n    /// @param weiAmount The amount of withdrawn ether in wei.\r\n    event DividendWithdrawn(address indexed to, uint256 weiAmount);\r\n}\r\n",
  "sourcePath": "C:\\Users\\a\\Desktop\\projects\\in-progress\\babycake\\contracts\\DividendPayingTokenInterface.sol",
  "ast": {
    "absolutePath": "/C/Users/a/Desktop/projects/in-progress/babycake/contracts/DividendPayingTokenInterface.sol",
    "exportedSymbols": {
      "DividendPayingTokenInterface": [
        463
      ]
    },
    "id": 464,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 440,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title Dividend-Paying Token Interface\n @author Roger Wu (https://github.com/roger-wu)\n @dev An interface for a dividend-paying token contract.",
        "fullyImplemented": false,
        "id": 463,
        "linearizedBaseContracts": [
          463
        ],
        "name": "DividendPayingTokenInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw.",
            "functionSelector": "91b89fba",
            "id": 447,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "dividendOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 447,
                  "src": "496:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "495:16:2"
            },
            "returnParameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 447,
                  "src": "535:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "534:9:2"
            },
            "scope": 463,
            "src": "476:68:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Withdraws the ether distributed to the sender.\n @dev SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.\n  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0.",
            "functionSelector": "6a474002",
            "id": 450,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawDividend",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:2:2"
            },
            "returnParameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "891:0:2"
            },
            "scope": 463,
            "src": "855:37:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@dev This event MUST emit when ether is distributed to token holders.\n @param from The address which sends ether to this contract.\n @param weiAmount The amount of distributed ether in wei.",
            "id": 456,
            "name": "DividendsDistributed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 456,
                  "src": "1141:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 454,
                  "indexed": false,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 456,
                  "src": "1163:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1140:41:2"
            },
            "src": "1114:68:2"
          },
          {
            "anonymous": false,
            "documentation": "@dev This event MUST emit when an address withdraws their dividend.\n @param to The address which withdraws ether from this contract.\n @param weiAmount The amount of withdrawn ether in wei.",
            "id": 462,
            "name": "DividendWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 462,
                  "src": "1428:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1428:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 460,
                  "indexed": false,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 462,
                  "src": "1448:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1427:39:2"
            },
            "src": "1404:63:2"
          }
        ],
        "scope": 464,
        "src": "219:1251:2"
      }
    ],
    "src": "35:1437:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/a/Desktop/projects/in-progress/babycake/contracts/DividendPayingTokenInterface.sol",
      "exportedSymbols": {
        "DividendPayingTokenInterface": [
          463
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".2"
          ]
        },
        "id": 440,
        "name": "PragmaDirective",
        "src": "35:23:2"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "documentation": "@title Dividend-Paying Token Interface\n @author Roger Wu (https://github.com/roger-wu)\n @dev An interface for a dividend-paying token contract.",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            463
          ],
          "name": "DividendPayingTokenInterface",
          "scope": 464
        },
        "children": [
          {
            "attributes": {
              "body": null,
              "documentation": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw.",
              "functionSelector": "91b89fba",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "dividendOf",
              "overrides": null,
              "scope": 463,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_owner",
                      "overrides": null,
                      "scope": 447,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 441,
                        "name": "ElementaryTypeName",
                        "src": "496:7:2"
                      }
                    ],
                    "id": 442,
                    "name": "VariableDeclaration",
                    "src": "496:14:2"
                  }
                ],
                "id": 443,
                "name": "ParameterList",
                "src": "495:16:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "overrides": null,
                      "scope": 447,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 444,
                        "name": "ElementaryTypeName",
                        "src": "535:7:2"
                      }
                    ],
                    "id": 445,
                    "name": "VariableDeclaration",
                    "src": "535:7:2"
                  }
                ],
                "id": 446,
                "name": "ParameterList",
                "src": "534:9:2"
              }
            ],
            "id": 447,
            "name": "FunctionDefinition",
            "src": "476:68:2"
          },
          {
            "attributes": {
              "body": null,
              "documentation": "@notice Withdraws the ether distributed to the sender.\n @dev SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.\n  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0.",
              "functionSelector": "6a474002",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawDividend",
              "overrides": null,
              "scope": 463,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 448,
                "name": "ParameterList",
                "src": "880:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 449,
                "name": "ParameterList",
                "src": "891:0:2"
              }
            ],
            "id": 450,
            "name": "FunctionDefinition",
            "src": "855:37:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": "@dev This event MUST emit when ether is distributed to token holders.\n @param from The address which sends ether to this contract.\n @param weiAmount The amount of distributed ether in wei.",
              "name": "DividendsDistributed"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "from",
                      "overrides": null,
                      "scope": 456,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 451,
                        "name": "ElementaryTypeName",
                        "src": "1141:7:2"
                      }
                    ],
                    "id": 452,
                    "name": "VariableDeclaration",
                    "src": "1141:20:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "weiAmount",
                      "overrides": null,
                      "scope": 456,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 453,
                        "name": "ElementaryTypeName",
                        "src": "1163:7:2"
                      }
                    ],
                    "id": 454,
                    "name": "VariableDeclaration",
                    "src": "1163:17:2"
                  }
                ],
                "id": 455,
                "name": "ParameterList",
                "src": "1140:41:2"
              }
            ],
            "id": 456,
            "name": "EventDefinition",
            "src": "1114:68:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": "@dev This event MUST emit when an address withdraws their dividend.\n @param to The address which withdraws ether from this contract.\n @param weiAmount The amount of withdrawn ether in wei.",
              "name": "DividendWithdrawn"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "to",
                      "overrides": null,
                      "scope": 462,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 457,
                        "name": "ElementaryTypeName",
                        "src": "1428:7:2"
                      }
                    ],
                    "id": 458,
                    "name": "VariableDeclaration",
                    "src": "1428:18:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "weiAmount",
                      "overrides": null,
                      "scope": 462,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 459,
                        "name": "ElementaryTypeName",
                        "src": "1448:7:2"
                      }
                    ],
                    "id": 460,
                    "name": "VariableDeclaration",
                    "src": "1448:17:2"
                  }
                ],
                "id": 461,
                "name": "ParameterList",
                "src": "1427:39:2"
              }
            ],
            "id": 462,
            "name": "EventDefinition",
            "src": "1404:63:2"
          }
        ],
        "id": 463,
        "name": "ContractDefinition",
        "src": "219:1251:2"
      }
    ],
    "id": 464,
    "name": "SourceUnit",
    "src": "35:1437:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-25T13:56:00.039Z",
  "devdoc": {
    "author": "Roger Wu (https://github.com/roger-wu)",
    "details": "An interface for a dividend-paying token contract.",
    "methods": {
      "dividendOf(address)": {
        "params": {
          "_owner": "The address of a token holder."
        },
        "returns": {
          "_0": "The amount of dividend in wei that `_owner` can withdraw."
        }
      },
      "withdrawDividend()": {
        "details": "SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0."
      }
    },
    "title": "Dividend-Paying Token Interface"
  },
  "userdoc": {
    "methods": {
      "dividendOf(address)": {
        "notice": "View the amount of dividend in wei that an address can withdraw."
      },
      "withdrawDividend()": {
        "notice": "Withdraws the ether distributed to the sender."
      }
    }
  }
}